<?xml version="1.0" encoding="UTF-8"?>
<document>
    <properties>
        <title>Using ${project.artifactId}</title>
    </properties>
    <body>
        <h1>Using ${project.artifactId}</h1>
        <section name="1. Add the plugin to your package project">
            <p>Add the plugin to your ui.apps / "content-package" type pom.xml</p>
            <div class="source">
<pre>
    &lt;plugin&gt;
        &lt;groupId&gt;${project.groupId}&lt;/groupId&gt;
        &lt;artifactId&gt;${project.artifactId}&lt;/artifactId&gt;
        &lt;version&gt;${project.version}&lt;/version&gt;
        &lt;configuration&gt;
        &lt;/configuration&gt;
        &lt;executions&gt;
            &lt;execution&gt;
                &lt;goals&gt;
                    &lt;goal&gt;scan&lt;/goal&gt;
                &lt;/goals&gt;
            &lt;/execution&gt;
        &lt;/executions&gt;
    &lt;/plugin&gt;
</pre>
            </div>
        </section>
        <section name="2. Export your platform nodetypes">
            <p>To properly prepare the scan for your code package, you might first need to export the Compact NodeType
                Definition (CND) from your Commercial Oak-based Product and make it available to the plugin.
            </p>
            <p>In Adobe AEM development, it is as simple as visiting crx/de lite on a representative installation, such
                as a <a href="http://localhost:4502/crx/de/index.jsp">properly patched local quickstart environment</a>.
            </p>
            <p>Click <strong>Tools -&gt; Export Node Type</strong>.
                <br/>
                <img src="images/export_cnd.png"/>

            </p>
            <p>
                You will see the generated CND content rendered directly.

                <div class="source">
<pre>
&lt;'sling'='http://sling.apache.org/jcr/sling/1.0'&gt;
&lt;'nt'='http://www.jcp.org/jcr/nt/1.0'&gt;
&lt;'cq'='http://www.day.com/jcr/cq/1.0'&gt;
&lt;'oak'='http://jackrabbit.apache.org/oak/ns/1.0'&gt;
&lt;'jcr'='http://www.jcp.org/jcr/1.0'&gt;
&lt;'mix'='http://www.jcp.org/jcr/mix/1.0'&gt;
&lt;'granite'='http://www.adobe.com/jcr/granite/1.0'&gt;
&lt;'rep'='internal'&gt;
&lt;'xmp'='http://ns.adobe.com/xap/1.0/'&gt;
&lt;'social'='http://www.adobe.com/social/1.0'&gt;
&lt;'dam'='http://www.day.com/dam/1.0'&gt;
&lt;'oauth'='http://oauth.net/'&gt;
&lt;'rdf'='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&gt;
&lt;'vlt'='http://www.day.com/jcr/vault/1.0'&gt;
&lt;'slingevent'='http://sling.apache.org/jcr/event/1.0'&gt;
&lt;'fd'='http://www.adobe.com/aemfd/fd/1.0'&gt;

[sling:OrderedFolder] &gt; sling:Folder
  orderable
  + * (nt:base) = sling:OrderedFolder version

[cq:OwnerTaggable] &gt; cq:Taggable
  mixin

[oak:Unstructured]
  - * (undefined) multiple
  - * (undefined)
  + * (nt:base) = oak:Unstructured version

...
</pre>
                </div>

            </p>
            <p>
                Save the output as a file under <tt>src/test/resources</tt> in your ui.apps module and add the
                <tt>&lt;cndNames&gt;/&lt;cndName&gt;</tt>
                parameter to your oakpal-maven-plugin configuration with the
                path to the file.
                <div class="source">
<pre>
    &lt;plugin&gt;
        &lt;groupId&gt;${project.groupId}&lt;/groupId&gt;
        &lt;artifactId&gt;${project.artifactId}&lt;/artifactId&gt;
        &lt;version&gt;${project.version}&lt;/version&gt;
        &lt;configuration&gt;
            &lt;cndNames>
                &lt;cndName&gt;[your-cnd-filename]&lt;/cndName&gt;
            &lt;/cndNames&gt;
        &lt;/configuration&gt;
        &lt;executions&gt;
            &lt;execution&gt;
                &lt;goals&gt;
                    &lt;goal&gt;scan&lt;/goal&gt;
                &lt;/goals&gt;
            &lt;/execution&gt;
        &lt;/executions&gt;
    &lt;/plugin&gt;
</pre>
                </div>
            </p>
        </section>

        <section name="3. Activate the Basic Checklist">
            <p>
                The <a href="../oakpal-core/the-basic-checklist.html">basic checklist</a> implements some sane default package
                acceptance rules, like disallowing subpackages, deletion of existing paths, unsafe acHandling modes, and
                preventing workspace filter overlaps between multiple packages.
            </p>
            <p>
                To accept the defaults, just add the
                <tt>&lt;checklists&gt;&lt;checklist&gt;basic&lt;/checklist&gt;&lt;/checklists&gt;</tt> element to your
                config.
            </p>
            <div class="source">
<pre>
    &lt;plugin&gt;
        &lt;groupId&gt;${project.groupId}&lt;/groupId&gt;
        &lt;artifactId&gt;${project.artifactId}&lt;/artifactId&gt;
        &lt;version&gt;${project.version}&lt;/version&gt;
        &lt;configuration&gt;
            &lt;cndNames>
                &lt;cndName&gt;[your-cnd-filename]&lt;/cndName&gt;
            &lt;/cndNames&gt;
            &lt;checklists&gt;
                &lt;checklist&gt;basic&lt;/checklist&gt;
            &lt;/checklists&gt;
        &lt;/configuration&gt;
        &lt;executions&gt;
            &lt;execution&gt;
                &lt;goals&gt;
                    &lt;goal&gt;scan&lt;/goal&gt;
                &lt;/goals&gt;
            &lt;/execution&gt;
        &lt;/executions&gt;
    &lt;/plugin&gt;
</pre>
            </div>

            <p>
                To override the default configuration of a basic check, just add a
                <tt>&lt;checks&gt;/&lt;check&gt;</tt> element to your
                plugin configuration. Specify the <tt>name</tt> of the basic check you wish to override, and provide a
                <tt>&lt;config&gt;</tt> element with custom values, or specify &lt;skip&gt;true&lt;/skip&gt; to disable
                the check altogether.
            </p>

            <div class="source">
<pre>
    &lt;plugin&gt;
        &lt;groupId&gt;${project.groupId}&lt;/groupId&gt;
        &lt;artifactId&gt;${project.artifactId}&lt;/artifactId&gt;
        &lt;version&gt;${project.version}&lt;/version&gt;
        &lt;configuration&gt;
            &lt;cndNames>
                &lt;cndName&gt;[your-cnd-filename]&lt;/cndName&gt;
            &lt;/cndNames&gt;
            &lt;checklists&gt;
                &lt;checklist&gt;basic&lt;/checklist&gt;
            &lt;/checklists&gt;
            &lt;checks&gt;
                &lt;check&gt;
                    &lt;name&gt;paths&lt;/name&gt;
                    &lt;config&gt;
                        &lt;rules&gt;
                            &lt;rule&gt;
                                &lt;type&gt;deny&lt;/type&gt;
                                &lt;pattern&gt;/etc(/.*)?&lt;/pattern&gt;
                            &lt;/rule&gt;
                        &lt;/rules&gt;
                    &lt;/config&gt;
                &lt;/check&gt;
                &lt;check&gt;
                    &lt;name&gt;subpackages&lt;/name&gt;
                    &lt;skip&gt;true&lt;/skip&gt;
                &lt;/check&gt;
                &lt;!-- to use checks that are skipped by default, you need to reference their name in a template element --&gt;
                &lt;check&gt;
                    &lt;name&gt;myEcho&lt;/name&gt;
                    &lt;template&gt;echo&lt;/template&gt;
                &lt;/check&gt;
            &lt;/checks&gt;
        &lt;/configuration&gt;
        &lt;executions&gt;
            &lt;execution&gt;
                &lt;goals&gt;
                    &lt;goal&gt;scan&lt;/goal&gt;
                &lt;/goals&gt;
            &lt;/execution&gt;
        &lt;/executions&gt;
    &lt;/plugin&gt;
</pre>
            </div>
            <p>
                Check &lt;config&gt; elements are transformed to the JSON format expected by the
                <tt>ProgressCheckFactory</tt> by the <a href="apidocs/net/adamcin/oakpal/maven/component/JavaxJsonObjectConverter.html">JavaxJsonObjectConverter</a>.
            </p>
        </section>
        <section name="4. Write a Script Check">
            <p>Follow these instructions to <a href="writing-a-script-check.html">create a script check for your
                package build</a>.</p>
        </section>

    </body>
</document>